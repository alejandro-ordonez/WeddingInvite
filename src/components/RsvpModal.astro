---
// RSVP Modal Component
import sunflowerIcon from '../assets/sunflower.svg';
import checkmarkIcon from '../assets/checkmark-circle.svg';
import sadFaceIcon from '../assets/sad-face.svg';
---

<!-- RSVP Modal -->
<div class="rsvp-modal" id="rsvpModal">
	<div class="modal-overlay" id="modalOverlay"></div>
	<div class="modal-content">
		<button class="modal-close" id="closeModal" aria-label="Cerrar">√ó</button>

		<div class="modal-header">
			<img src={sunflowerIcon.src} alt="Sunflower" />
			<h2 class="modal-title">Confirma tu asistencia</h2>
		</div>

		<form class="rsvp-form" id="rsvpForm">
			<div class="form-group">
				<label class="radio-option">
					<input type="radio" name="attendance" value="yes" required />
					<span class="radio-label">Confirmo mi asistencia</span>
				</label>

				<label class="radio-option">
					<input type="radio" name="attendance" value="no" required />
					<span class="radio-label">No podr√© estar :(</span>
				</label>
			</div>

			<button type="submit" class="submit-button" id="submitButton">
				<span class="button-text">Enviar</span>
				<span class="button-loading" style="display: none;">
					<img src={sunflowerIcon.src} alt="Loading" class="loading-sunflower" />
					<span>Enviando...</span>
				</span>
			</button>
		</form>
	</div>
</div>

<!-- Confirmation Modal -->
<div class="confirmation-modal" id="confirmationModal">
	<div class="modal-overlay" id="confirmationOverlay"></div>
	<div class="modal-content confirmation-content">
		<div class="modal-header">
			<img id="confirmationIcon" alt="Confirmation" />
			<h2 class="modal-title" id="confirmationTitle"></h2>
		</div>
		<p class="confirmation-message" id="confirmationMessage"></p>
		<button type="button" class="submit-button" id="confirmationOkBtn">
			Aceptar
		</button>
	</div>
</div>

<script define:vars={{ checkmarkIconSrc: checkmarkIcon.src, sadFaceIconSrc: sadFaceIcon.src }}>
	// RSVP Modal functionality
	const modal = document.getElementById('rsvpModal');
	const closeBtn = document.getElementById('closeModal');
	const overlay = document.getElementById('modalOverlay');
	const form = document.getElementById('rsvpForm');
	const submitButton = document.getElementById('submitButton');
	const buttonText = submitButton?.querySelector('.button-text');
	const buttonLoading = submitButton?.querySelector('.button-loading');

	// Check if user has already submitted
	function checkSubmissionStatus() {
		const guestId = sessionStorage.getItem('guestId') || '';
		const submissionKey = `rsvp_submitted_${guestId}`;
		const hasSubmitted = localStorage.getItem(submissionKey);

		if (hasSubmitted && submitButton) {
			submitButton.disabled = true;
			submitButton.style.opacity = '0.6';
			submitButton.style.cursor = 'not-allowed';
			if (buttonText) {
				buttonText.textContent = 'Ya confirmaste';
			}
		}

		return hasSubmitted;
	}

	// Function to open modal (can be called from parent)
	function openRsvpModal() {
		if (modal) {
			modal.classList.add('active');
			document.body.style.overflow = 'hidden';
			checkSubmissionStatus();
		}
	}

	// Show/hide loading state
	function setLoadingState(isLoading) {
		if (submitButton && buttonText && buttonLoading) {
			if (isLoading) {
				buttonText.style.display = 'none';
				buttonLoading.style.display = 'flex';
				submitButton.disabled = true;
			} else {
				buttonText.style.display = 'inline';
				buttonLoading.style.display = 'none';
				submitButton.disabled = false;
			}
		}
	}

	function closeModal() {
		if (modal) {
			modal.classList.remove('active');
			document.body.style.overflow = '';
		}
	}

	// Confirmation Modal functionality
	const confirmationModal = document.getElementById('confirmationModal');
	const confirmationOverlay = document.getElementById('confirmationOverlay');
	const confirmationOkBtn = document.getElementById('confirmationOkBtn');
	const confirmationTitle = document.getElementById('confirmationTitle');
	const confirmationMessage = document.getElementById('confirmationMessage');
	const confirmationIcon = document.getElementById('confirmationIcon');

	function showConfirmation(isSuccess) {
		if (confirmationModal) {
			// Set title and message based on success
			if (isSuccess) {
				confirmationTitle.textContent = '¬°Gracias!';
				confirmationMessage.textContent = '¬°Gracias por confirmar tu asistencia! üéâ';
				// Success icon (checkmark in circle)
				confirmationIcon.src = checkmarkIconSrc;
			} else {
				confirmationTitle.textContent = 'Lamentamos tu ausencia';
				confirmationMessage.textContent = 'Lamentamos que no puedas asistir. ¬°Te extra√±aremos! üíî';
				// Sad icon (sad face)
				confirmationIcon.src = sadFaceIconSrc;
			}

			confirmationModal.classList.add('active');
			document.body.style.overflow = 'hidden';
		}
	}

	function closeConfirmation() {
		if (confirmationModal) {
			confirmationModal.classList.remove('active');
			document.body.style.overflow = '';
		}
	}

	if (confirmationOkBtn) {
		confirmationOkBtn.addEventListener('click', closeConfirmation);
	}

	if (confirmationOverlay) {
		confirmationOverlay.addEventListener('click', closeConfirmation);
	}

	// Listen for custom event from parent button
	document.addEventListener('openRsvpModal', openRsvpModal);

	if (closeBtn) {
		closeBtn.addEventListener('click', closeModal);
	}

	if (overlay) {
		overlay.addEventListener('click', closeModal);
	}

	// Handle form submission
	if (form) {
		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			const formData = new FormData(form);
			const attendance = formData.get('attendance');

			// Get guest info from sessionStorage
			const guestId = sessionStorage.getItem('guestId') || '';
			const guestName = new URLSearchParams(window.location.search).get('name') || '';

			// Google Forms configuration
			// TODO: Fill in your Google Forms URL and entry IDs
			// To find these:
			// 1. Create a Google Form with fields for: Name, ID, Attendance
			// 2. Click "Send" > Get pre-filled link
			// 3. Fill the form and get the link
			// 4. The URL will show entry IDs like: entry.123456789=value
			const GOOGLE_FORMS_URL = 'https://docs.google.com/forms/u/0/d/e/1FAIpQLSeub5AxyfzcsZqyYSgS7nJmg2XU89FQjgSR6aO4YnDWpe0E_w/formResponse';
			const ENTRY_ID_GUEST_ID = 'entry.1638483028'; // Replace with your ID field entry ID
			const ENTRY_ID_ATTENDANCE = 'entry.785967633'; // Replace with your Attendance field entry ID

			// Show loading state
			setLoadingState(true);

			try {
				// Prepare form data for Google Forms
				const googleFormData = new FormData();
				googleFormData.append(ENTRY_ID_GUEST_ID, guestId);
				googleFormData.append(ENTRY_ID_ATTENDANCE, attendance === 'yes' ? 'S√≠' : 'No');

				// Submit to Google Forms
				await fetch(GOOGLE_FORMS_URL, {
					method: 'POST',
					mode: 'no-cors', // Required for Google Forms
					body: googleFormData
				});

				// Store submission in localStorage
				const submissionKey = `rsvp_submitted_${guestId}`;
				localStorage.setItem(submissionKey, JSON.stringify({
					timestamp: Date.now(),
					attendance: attendance === 'yes' ? 'yes' : 'no',
					guestName
				}));

				// Hide loading state
				setLoadingState(false);

				// Close RSVP modal first
				closeModal();
				form.reset();

				// Show confirmation message
				showConfirmation(attendance === 'yes');
			} catch (error) {
				console.error('Error submitting RSVP:', error);
				setLoadingState(false);
				closeModal();
				// Show error as "no" confirmation (sad message)
				showConfirmation(false);
			}
		});
	}

	// Close modal on ESC key
	document.addEventListener('keydown', (e) => {
		if (e.key === 'Escape') {
			if (confirmationModal?.classList.contains('active')) {
				closeConfirmation();
			} else if (modal?.classList.contains('active')) {
				closeModal();
			}
		}
	});
</script>

<style>
	/* Modal Styles */
	.rsvp-modal {
		position: fixed;
		inset: 0;
		z-index: 1000;
		display: flex;
		align-items: center;
		justify-content: center;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.3s ease;
	}

	.rsvp-modal.active {
		opacity: 1;
		pointer-events: all;
	}

	.modal-overlay {
		position: absolute;
		inset: 0;
		background: rgba(0, 0, 0, 0.6);
		backdrop-filter: blur(4px);
	}

	.modal-content {
		position: relative;
		background: linear-gradient(to bottom, rgba(255, 248, 231, 0.98), rgba(255, 255, 255, 0.98));
		border-radius: 20px;
		padding: 3rem 2.5rem;
		max-width: 500px;
		width: 90%;
		margin: 1rem;
		box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
		transform: scale(0.9);
		transition: transform 0.3s ease;
	}

	.rsvp-modal.active .modal-content {
		transform: scale(1);
	}

	.modal-close {
		position: absolute;
		top: 1rem;
		right: 1rem;
		background: none;
		border: none;
		font-size: 2rem;
		color: #6B5A45;
		cursor: pointer;
		width: 40px;
		height: 40px;
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		transition: all 0.2s ease;
	}

	.modal-close:hover {
		background: rgba(107, 90, 69, 0.1);
		transform: rotate(90deg);
	}

	.modal-header {
		text-align: center;
		margin-bottom: 2rem;
	}

	.modal-header img {
		width: 60px;
		height: 60px;
		margin-bottom: 1rem;
	}

	.modal-title {
		font-family: 'Cormorant Garamond', serif;
		font-size: 2.2rem;
		font-weight: 500;
		color: #6B5A45;
		margin: 0;
		letter-spacing: 1px;
	}

	/* Form Styles */
	.rsvp-form {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.form-group {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.radio-option {
		display: flex;
		align-items: center;
		padding: 1rem 1.5rem;
		background: white;
		border: 2px solid #E5D9C7;
		border-radius: 12px;
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.radio-option:hover {
		border-color: #2D9B91;
		background: rgba(45, 155, 145, 0.05);
	}

	.radio-option input[type="radio"] {
		appearance: none;
		width: 20px;
		height: 20px;
		border: 2px solid #6B8368;
		border-radius: 50%;
		margin-right: 1rem;
		cursor: pointer;
		position: relative;
		transition: all 0.2s ease;
	}

	.radio-option input[type="radio"]:checked {
		border-color: #2D9B91;
		background: #2D9B91;
	}

	.radio-option input[type="radio"]:checked::after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 8px;
		height: 8px;
		background: white;
		border-radius: 50%;
	}

	.radio-label {
		font-family: 'Montserrat', sans-serif;
		font-size: 1.05rem;
		color: #6B5A45;
		font-weight: 400;
		flex: 1;
	}

	.submit-button {
		padding: 1rem 2rem;
		font-family: 'Montserrat', sans-serif;
		font-size: 1.05rem;
		font-weight: 500;
		color: white;
		background: linear-gradient(135deg, #2D9B91 0%, #40B5AD 100%);
		border: none;
		border-radius: 50px;
		cursor: pointer;
		letter-spacing: 1.5px;
		text-transform: uppercase;
		box-shadow: 0 4px 15px rgba(45, 155, 145, 0.3);
		transition: all 0.3s ease;
		margin-top: 0.5rem;
	}

	.submit-button:hover {
		transform: translateY(-2px);
		box-shadow: 0 6px 20px rgba(45, 155, 145, 0.4);
		background: linear-gradient(135deg, #249187 0%, #379FA3 100%);
	}

	.submit-button:active {
		transform: translateY(0);
	}

	.submit-button:disabled {
		cursor: not-allowed;
		opacity: 0.6;
	}

	.button-loading {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		justify-content: center;
	}

	.loading-sunflower {
		width: 24px;
		height: 24px;
		animation: sunflowerSpin 2s linear infinite;
	}

	@keyframes sunflowerSpin {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}

	@media (max-width: 768px) {
		.modal-content {
			padding: 2.5rem 2rem;
		}

		.modal-title {
			font-size: 1.8rem;
		}
	}

	@media (max-width: 480px) {
		.modal-content {
			padding: 2rem 1.5rem;
		}

		.modal-title {
			font-size: 1.6rem;
		}

		.modal-header img {
			width: 50px;
			height: 50px;
		}

		.radio-option {
			padding: 0.9rem 1.2rem;
		}

		.radio-label {
			font-size: 0.95rem;
		}

		.submit-button {
			font-size: 0.95rem;
			padding: 0.9rem 1.8rem;
		}
	}

	/* Confirmation Modal Styles */
	.confirmation-modal {
		position: fixed;
		inset: 0;
		z-index: 1100;
		display: flex;
		align-items: center;
		justify-content: center;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.3s ease;
	}

	.confirmation-modal.active {
		opacity: 1;
		pointer-events: all;
	}

	.confirmation-modal.active .modal-content {
		transform: scale(1);
	}

	.confirmation-content {
		text-align: center;
		max-width: 450px;
	}

	.confirmation-message {
		font-family: 'Montserrat', sans-serif;
		font-size: 1.15rem;
		color: #6B5A45;
		margin: 1.5rem 0 2rem;
		line-height: 1.6;
		font-weight: 400;
	}

	@media (max-width: 480px) {
		.confirmation-message {
			font-size: 1rem;
			margin: 1.2rem 0 1.8rem;
		}
	}
</style>
